require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '10.0'

target 'ledgerlivemobile' do
  config = use_native_modules!

  use_react_native!(:path => config["reactNativePath"])

  # Pods for ledgerlivemobile
  pod 'react-native-ble-plx', :path => '../node_modules/react-native-ble-plx'

  pod 'djinni_objc', :path => '../node_modules/@ledgerhq/react-native-ledger-core'
  pod 'ledger-core-objc', :path => '../node_modules/@ledgerhq/react-native-ledger-core'
  pod 'RNLibLedgerCore', :path => '../node_modules/@ledgerhq/react-native-ledger-core'

  pod 'react-native-webview', :path => '../node_modules/react-native-webview'

  target 'ledgerlivemobileTests' do
    inherit! :search_paths
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  use_flipper!
  post_install do |installer|
    flipper_post_install(installer)

    # workaround for Xcode 12.5: https://stackoverflow.com/a/67302297
    xcode_version = `system_profiler SPDeveloperToolsDataType | grep Xcode`
      .split('Xcode: ')[1]
      .split(' ')[0]
    if xcode_version == '12.5'
      find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
          "atomic_notify_one(state)", "folly::atomic_notify_one(state)")
      find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
        "atomic_wait_until(&state, previous | data, deadline)", "folly::atomic_wait_until(&state, previous | data, deadline)")
    end

    installer.pods_project.targets.each do |target|
      if target.name == 'react-native-config'
        phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
        phase.shell_script = "cd ../../"\
                             " && RNC_ROOT=./node_modules/react-native-config/"\
                             " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
                             " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
        target.build_phases << phase
        target.build_phases.move(phase,0)
      end
    end

  end
end

def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
    text = File.read(name)
    replace = text.gsub(findstr,replacestr)
    if text != replace
      puts "Fix: " + name
      File.open(name, "w") { |file| file.puts replace }
      STDOUT.flush
    end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end
